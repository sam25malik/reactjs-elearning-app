{"version":3,"sources":["pages/popup/popup.js","pages/home/home.js","App.js","serviceWorker.js","index.js"],"names":["Popup","path","this","props","popUpData","url","console","log","window","location","replace","react_default","a","createElement","className","onClick","closePopup","id","title","description_short","build_default","rating","stars","starRatedColor","starDimension","starSpacing","numberOfStars","name","age","provider_name","packages","type","routeChange","bind","Component","options","value","label","Home","_this","dateObj","numDays","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChangeStart","startDate","setState","visibleStart","visibleEnd","onChangeEnd","endDate","handleSelect","selectedOption","handler","e","target","getAttribute","quickView","getList","formatDate","state","that","assertThisInitialized","start_date","end_date","concat","fetch","method","then","response","body","ok","json","data","filtered","filter","item","date","Date","start","getDay","day","filterData","arr","index","self","findIndex","t","listData","catch","err","setDate","getDate","buttonStart","buttonEnd","quickViewData","open","d","month","getMonth","year","getFullYear","length","join","toggleVisibilityStart","toggleVisibilityEnd","style","display","entry_default","onChange","minDate","react_select_browser_esm","map","result","i","key","backgroundImage","photo","popup_popup","text","togglePopup","App","react_router_dom","react_router","component","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d07dc2e5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router';\nimport StarRatings from 'react-star-ratings';\nimport './popup.css';\n\nclass Popup extends ComponentÂ {\n    \n  routeChange(){\n      let path = this.props.popUpData.url;\n      console.log(path);\n      window.location.replace(path);\n  }\n\n  render() {\n    return (\n      <div className='popup'>\n        <div className='popup_inner'>\n            <button onClick={this.props.closePopup} id=\"close\"><i className=\"fa fa-close\"></i> Close</button>\n            <div className=\"col-md-12 popover_title\"><h2 className=\"title underline\">{this.props.popUpData.title}</h2></div>\n            <div className=\"col-md-6 left_side\">\n            <div className=\"left_inner_content\">\n              <div className=\"description\">\n                <div className=\"desc_title\"><strong>Description:</strong></div> {this.props.popUpData.description_short}\n              </div>\n              <div><div className=\"desc_title\"><strong>Rating: </strong></div>\n              <StarRatings\n                rating={this.props.popUpData.rating.stars}\n                starRatedColor=\"blue\"\n                starDimension=\"30px\"\n                starSpacing=\"5px\"\n                numberOfStars={5}\n                name='rating'\n              />\n          </div> \n        </div>\n      </div>\n      <div className=\"col-md-6 right_side\">\n        <div className=\"right_inner_content\">\n          <div><div className=\"desc_title\"><strong>Age: </strong></div>{this.props.popUpData.age['min']} to {this.props.popUpData.age['max']}</div>\n          <div><div className=\"desc_title\"><strong>Provider: </strong></div>{this.props.popUpData.provider_name}</div>\n          <div><div className=\"desc_title\"><strong>Location: </strong></div>{this.props.popUpData.location}</div>\n          <div><div className=\"desc_title\"><strong>Package: </strong></div> {this.props.popUpData.packages[0]['price']} {this.props.popUpData.packages[0]['currency']}</div>\n      </div>\n    </div>\n    <center><button type=\"button\" className=\"detailsBtn\" onClick={this.routeChange.bind(this)}>View All Details</button></center>\n    </div>\n    </div>\n    );\n  }\n}\n\nexport default Popup;","import React, { Component } from 'react';\nimport Calendar from 'react-calendar';\nimport Popup from '../popup/popup';\nimport Select from 'react-select';\nimport './home.css';\n\nconst options = [\n  { value: 7, label: 'None' },\t\n  { value: 0, label: 'Sunday' },\n  { value: 1, label: 'Monday' },\n  { value: 2, label: 'Tuesday' },\n  { value: 3, label: 'Wednesday' },\n  { value: 4, label: 'Thursday' },\n  { value: 5, label: 'Friday' },\n  { value: 6, label: 'Saturday' },\n];\n\nfunction addDays(dateObj, numDays) {\n   dateObj.setDate(dateObj.getDate() + numDays);\n   return dateObj;\n}\n\nclass Home extends Component {  \n\n\tconstructor(props) {\n      super(props);\n      this.state = {\n      \tlistData:'',\n      \tstartDate:new Date(),\n      \tendDate: addDays(new Date(), 7),\n      \tvisibleStart: false,\n      \tvisibleEnd: false,\n      \tbuttonStart:'',\n      \tbuttonEnd:'',\n      \tquickViewData:'',\n      \topen:false,\n      \tselectedOption: null,\n      };\n\t}\n\n\tonChangeStart = startDate => this.setState({ startDate, visibleStart:false, visibleEnd:false })\n\tonChangeEnd = endDate => this.setState({ endDate, visibleStart:false, visibleEnd:false })\n\n\ttoggleVisibilityStart() {\n\t\tthis.setState({\n\t      visibleStart: !this.state.visibleStart,\n\t      visibleEnd:false\n\t    });\n  }\n\n  toggleVisibilityEnd() {\n    this.setState({\n      visibleEnd: !this.state.visibleEnd,\n    \tvisibleStart:false\n    });\n\t\n  }\n\n  componentDidMount(){\n     this.getList();\n  }\n\n  componentDidUpdate(){\n  \tconsole.log(this.state.startDate);\n  \tconsole.log(this.state.endDate);\n  \t\t\n  }\n\n  formatDate(date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n\n    return [year, month, day].join('-');\n}\n\n\tquickView(index){\n\t    console.log('getPlanet');\n\t    console.log(this.state.listData[index].id);\n\t    let id = this.state.listData[index].id;\n\t\tconst that = this;    \n\t    \n\t    const url = `https://skilldeer.com/course/quick-view?id=${id}`;\t\n\t\t\n\t\tfetch(url, {\n\t\t\t    method: 'get',\n\t\t\t  }).then(function(response) {\n\t\t\t        console.log(response.body);\n\t\t\t        if(response.ok)\n\t\t\t        {\n\t\t\t          console.log(response);\n\t\t\t          response.json().then(function(data) {\n\t           \t\t  console.log(data);        \n\t\t           \t  that.setState({\n\t\t                \tquickViewData:data,\n\t\t                \topen:true,\n\t\t              })\n\t         \t\t});\n\t                }\n\t\t\t        else\n\t\t\t        {\n\t\t\t          console.log('invalid');\n\t\t\t        }\n\t\t\t    }).catch(function(err) {\n\t\t\t      console.log(err);\n\t\t});    \n\t\t           \n    }\n\n\thandleSelect = selectedOption => {\n\t    this.setState({ selectedOption });\n\t    console.log(`Option selected:`, selectedOption);\n  \t};\n\n\thandler  = e => {\n\t  //  console.log(e.target.getAttribute(\"id\"));\n\t    let id = e.target.getAttribute(\"id\");\n\t    console.log(id);\n\t    //this.setState({planetData:''});\n\t \tthis.quickView(id);\n\t };\n\n\tgetList = () =>{\n\t\tconsole.log('getList called()');\n\n\t\tconsole.log(this.formatDate(this.state.startDate));\n\n\t\tconst that = this;    \n    \t\n    \tlet start_date = this.formatDate(this.state.startDate);\n    \tlet end_date = this.formatDate(this.state.endDate);\n    \tconsole.log(start_date);\n    \tconsole.log(end_date);\n    \tconst url = `https://skilldeer.com/calendar/list?start=${start_date}&end=${end_date}`;\n  \t\t\n\t\tfetch(url, {\n\t\t      method: 'get',\n\t\t      }).then(function(response) {\n\t\t        console.log(response.body);\n\t\t        if(response.ok)\n\t\t        {\n\t\t          console.log(response);\n\t\t          response.json().then(function(data) {\n           \t\t  console.log(data);    \n           \t\t  \n           \t\t  var filtered;\n\n           \t\t  if(that.state.selectedOption!=null)\n           \t\t  {\n           \t\t       if(that.state.selectedOption['value']==7)\n           \t\t       {\n           \t\t       \t  filtered=data;\n           \t\t       }else{\n\t\t\t\t       filtered=data.filter(function(item){\n\t\t\t\t  \t   var date = new Date(item.start);\n           \t\t       console.log(date.getDay());\n           \t\t       var day = date.getDay();\n           \t\t       console.log(that.state.selectedOption['value']);\n           \t\t       if(day==that.state.selectedOption['value'])\n\t\t\t\t       {\n\t\t\t\t       \t return item;\n\t\t\t\t       }         \n\t\t\t\t\t});\n\t\t\t\t   }\n           \t\t}else{\n           \t\t\tfiltered=data;\n           \t\t}\n\n           \t\tconsole.log(filtered);\n           \t\t  \t\n           \t\t  var filterData = filtered.filter((arr, index, self) =>\n   \t\t\t\t  index === self.findIndex((t) => (t.id === arr.id)))\n\t\t\t\t  console.log(filterData);\n\t           \t  \n\t           \t  that.setState({\n\t                \tlistData:filterData,\n\t              })\n         \t\t\n         \t\t});\n                }\n\t\t        else\n\t\t        {\n\t\t          console.log('invalid');\n\t\t        }\n\t\t    }).catch(function(err) {\n\t\t      console.log(err);\n\t\t    });\n\t}\n\n\ttogglePopup() {\n    this.setState({\n      open: !this.state.open\n    });\n  }\n\n\t\n    render() {\n\t     return (\n\t      <div>\n\t      <div className=\"row\">\n\t\t  \t<div className=\"col-sm-12 col-md-2 col-lg-2 sidebarHome\">\n\t\t  \t\t<div className=\"searchFilter\">\n\t\t  \t\t\t<h2 className=\"sidebarTitle\">FILTERS</h2>\n\t\t  \t\t</div>\n\t\t  \t\t<h2 className=\"sidebarHeader\">FILTER BY DATE</h2>\n\t\t  \t\t<div className=\"date\">\n\t\t   \t\t\t<button onClick={this.toggleVisibilityStart.bind(this)} className=\"startDate\">{this.formatDate(this.state.startDate)}</button>\n\t\t   \t\t\t<button onClick={this.toggleVisibilityEnd.bind(this)} className=\"endDate\">{this.formatDate(this.state.endDate)}</button>\n       \t \t\t</div>\n       \t\t\t<div style={{display: this.state.visibleStart ? 'block': 'none'}}>\n\t\t   \t\t<Calendar\n          \t\t\tonChange={this.onChangeStart}\n          \t\t\tvalue={this.state.startDate}\n        \t\t/>\n        \t</div>\n        \t<div style={{display: this.state.visibleEnd ? 'block': 'none'}}>\n\t\t   \t\t<Calendar\n          \t\t\tonChange={this.onChangeEnd}\n          \t\t\tvalue={this.state.endDate}\n          \t\t\tminDate={this.state.startDate}\n        \t\t/>\n        \t</div>\n\t\t\t<h2 className=\"sidebarHeader\">FILTER BY DAY</h2>\n\t\t  \t\t<Select\n        \t\t\tvalue={this.state.selectedOption}\n        \t\t\tonChange={this.handleSelect}\n        \t\t\toptions={options}\n      \t\t\t/>\n\t\t  \t<button type=\"button\" className=\"searchBtn\" onClick={this.getList}>Search</button>\n\t\t </div>\n\t\t  \n\t\t<div className=\"col-sm-12 col-md-9 col-lg-9 mainSection\">\n\t\t  \t<h2 className=\"mainHeader\">Available Classes</h2>\n\t\t  \t<div className=\"row mainContent\">\n\t\t\t\t{this.state.listData && this.state.listData.map(function(result, i) {\n                  return  <div id={i} key={i} className=\"box\" style={{backgroundImage: `url(${result.photo})`}}><ul className=\"box-ul\"><li><h2 className=\"listHeader\">{result.title}</h2></li><li><div className=\"overlay\"><button id={i} type=\"button\" className=\"searchBtn\" onClick={this.handler}>Quick View</button></div></li></ul></div>\n                }.bind(this))}\n\t\t \t</div>\n\t\t \t{this.state.open ? \n\t          <Popup\n\t            text='Close Me'\n\t            closePopup={this.togglePopup.bind(this)}\n\t            popUpData = {this.state.quickViewData}\n\t          />\n\t          : null\n        \t}\n\t\t </div>\n\t\t</div>\n\t\t</div>\n\t    );\n  \t}\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router,\n  Route,\n  NavLink,\n  Switch\n} from \"react-router-dom\";\nimport Home from './pages/home/home';\n\n\nclass App extends Component {\n\n  render() {\n    return (\n    <Router>\n        <Switch>\n          <Route path=\"/\" component={Home} />\n        </Switch>\n      </Router>\n        );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}